// * Grid Setup * //

// These variables and mixins need to be re-evaluated every time we drop
// columns at responsive breakpoints, so we re-import inside media queries.
// This also allows us to use a fluid layout at some widths and a fixed
// layout at others.


// The next line should never need to be changed
@grid-width: (@buffer * 2 + (@columns * (@column + @gutter)));

// ==========================================================================
// Fluid Grid Mixins
// ==========================================================================

.row (@cols: @columns) when (@cols = @columns) and (@fluid) {
    padding-left: percentage(@buffer / @grid-width);
    padding-right: percentage(@buffer / @grid-width);
    overflow: hidden;
}

.column (@cols: 1) when (@fluid) {
    float: left;
    margin-left: percentage((@gutter / 2) / @grid-width);
    margin-right: percentage((@gutter / 2) / @grid-width);
    width: percentage((@cols * (@column + @gutter) - @gutter) / @grid-width);
}

.push (@cols: 1) when (@fluid) {
    position: relative;
    left: percentage((@cols * (@column + @gutter)) / @grid-width);
}

.pull (@cols: 1) when (@fluid) {
    position: relative;
    right: percentage((@cols * (@column + @gutter)) / @grid-width);
}

// ==========================================================================
// Fixed Grid Mixins
// ==========================================================================

.row (@cols: @columns) when (@cols = @columns) and not (@fluid) {
    width: (@grid-width * @px);
    padding-left: (@buffer * @px);
    padding-right: (@buffer * @px);
    overflow: hidden;
}

.column (@cols: 1) when not (@fluid) {
    float: left;
    margin-left: (@gutter / 2 * @px);
    margin-right: (@gutter / 2 * @px);
    width: (@cols * (@column + @gutter) - @gutter * @px);
}

.push (@cols: 1) when not (@fluid) {
    position: relative;
    left: (@cols * (@column + @gutter) * @px);
}

.pull (@cols: 1) when not (@fluid) {
    position: relative;
    right: (@cols * (@column + @gutter) * @px);
}

// ==========================================================================
// Shared
// ==========================================================================

.row (@cols) when (@cols < @columns) {
    overflow: hidden;
}
