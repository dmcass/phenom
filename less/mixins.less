// * Mixins * //

// Hiding
// ==========================================================================

// Hide from browsers & screen readers
.hidden {
    display: none;
    visibility: hidden;
}

// Hide from browsers only
.screen-reader {
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    border: 0;
    position: absolute;
    overflow: hidden;
    clip: rect(0 0 0 0);
}

// Clearing
// ==========================================================================

// Don't use this when you can avoid it with overflow: hidden
// on elements that don't have dimensions
.cf () {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        .clear;
    }
}

// Image Replacement
// ==========================================================================

.ir (@url) {
    background-image: url("@{url}");
    font: 0/0 a !important;
    color: transparent !important;
    text-shadow: none !important;
}

// CSS Arrows
// ==========================================================================

#arrow {
    ._init(@s) {
        content: '';
        width: 0;
        height: 0;
        margin: 0 5px;
        display: inline-block;
        overflow: hidden;
        border: @s solid transparent;
    }
    .up(@size, @color) {
        #arrow > ._init(@size);
        border-top: 0;
        border-bottom-color: @color;
    }
    .right(@size, @color) {
        #arrow > ._init(@size);
        border-right: 0;
        border-left-color: @color;
    }
    .down(@size, @color) {
        #arrow > ._init(@size);
        border-bottom: 0;
        border-top-color: @color;
    }
    .left(@size, @color) {
        #arrow > ._init(@size);
        border-left: 0;
        border-right-color: @color;
    }
}

// CSS3 Gradients
// ==========================================================================

#gradient {
    .vertical(@start, @stop) {
        background: @stop;
        background-repeat: no-repeat;
        background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(@start), to(@stop));
        background-image: -webkit-linear-gradient(top, @start, @stop);
        background-image: -moz-linear-gradient(top, @start, @stop);
        background-image: -ms-linear-gradient(top, @start, @stop);
        background-image: -o-linear-gradient(top, @start, @stop);
        background-image: linear-gradient(top, @start, @stop);
    }
    .horizontal(@start, @stop) {
        background: @stop;
        background-repeat: no-repeat;
        background-image: -webkit-gradient(linear, 0% 0%, 100% 0%, from(@start), to(@stop));
        background-image: -webkit-linear-gradient(top, @start, @stop);
        background-image: -moz-linear-gradient(top, @start, @stop);
        background-image: -ms-linear-gradient(top, @start, @stop);
        background-image: -o-linear-gradient(top, @start, @stop);
        background-image: linear-gradient(top, @start, @stop);
    }
    .angle(@start, @stop, @deg: 45deg) {
        background: @stop;
        background-repeat: no-repeat;
        background-image: -webkit-linear-gradient(@deg, @start, @stop);
        background-image: -moz-linear-gradient(@deg, @start, @stop);
        background-image: -ms-linear-gradient(@deg, @start, @stop);
        background-image: -o-linear-gradient(@deg, @start, @stop);
        background-image: linear-gradient(@deg, @start, @stop);
    }
}


// Misc CSS3 Properties
// ==========================================================================

.box-sizing(@box: content-box) {
    -webkit-box-sizing: @box;
    -moz-box-sizing: @box;
    box-sizing: @box;
}

// For border-radius shorthand containing slash, you must escape the string using ~""
.border-radius(@radius: 5px) {
    -webkit-border-radius: @radius;
    -moz-border-radius: @radius;
    border-radius: @radius;
}

// For multiple box shadows, you should use a local variable
.box-shadow(@shadow) {
    -webkit-box-shadow: @shadow;
    -moz-box-shadow: @shadow;
    box-shadow: @shadow;
}

// To be applied to TRs
.zebra-stripe(@highlight: @v16) {
    &:nth-child(odd) {
        background-color: @highlight;
    }
}

//
// Background
//

.background-size(@size) {
    -webkit-background-size: @size;
    -moz-background-size: @size;
    -o-background-size: @size;
    background-size: @size;
}

.background-clip(@box: border-box) {
    -webkit-background-clip: @box;
    -moz-background-clip: @box;
    background-clip: @box;
}

.background-origin(@box: padding-box) {
    -webkit-background-origin: @box;
    -moz-background-origin: @box;
    background-origin: @box;
}

//
// Effects
//

.transform(@transform) {
    -webkit-transform: @transform;
    -moz-transform: @transform;
    -ms-transform: @transform;
    -o-transform: @transform;
    transform: @transform;
}

// For 3D Transforms
.backface-visibility(@visibility: visible) {
    -webkit-backface-visibility: @visibility;
    -moz-backface-visibility: @visibility;
    backface-visibility: @visibility;
}

.transition(@transition) {
    -webkit-transition: @transition;
    -moz-transition: @transition;
    transition: @transition;
}

.animation(@animation) {
    -webkit-animation: @animation;
    -moz-animation: @animation;
    animation: @animation;
}
