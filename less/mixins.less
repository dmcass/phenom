// * Mixins * //

// Hiding
// ==========================================================================

// Hide from browsers & screen readers

.hidden {
    display: none;
    visibility: hidden;
}

// Hide from browsers only

.screen-reader {
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    border: 0;
    position: absolute;
    overflow: hidden;
    clip: rect(0 0 0 0);
}

// Clearing
// ==========================================================================

// Don't use this when you can avoid it with overflow: hidden
// on elements that don't have dimensions. This should be used
// almost exclusively as a mixin, never as a class.

.clearfix {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// Image Replacement
// ==========================================================================

.ir(@url) {
    background-image: url("@{url}");
    font: 0/0 a !important;
    color: transparent !important;
    text-shadow: none !important;
}

// CSS Arrows (Triangles)
// ==========================================================================

#arrow {
    ._init(@s) {
        content: '';
        width: 0;
        height: 0;
        margin: 0 5px;
        display: inline-block;
        overflow: hidden;
        border: @s solid transparent;
    }
    .up(@size, @color) {
        #arrow > ._init(@size);
        border-top: 0;
        border-bottom-color: @color;
    }
    .right(@size, @color) {
        #arrow > ._init(@size);
        border-right: 0;
        border-left-color: @color;
    }
    .down(@size, @color) {
        #arrow > ._init(@size);
        border-bottom: 0;
        border-top-color: @color;
    }
    .left(@size, @color) {
        #arrow > ._init(@size);
        border-left: 0;
        border-right-color: @color;
    }
}

// Misc CSS3 Properties
// ==========================================================================

.box-sizing(@box: content-box) {
    -moz-box-sizing: @box;
    box-sizing: @box;
}

// To be applied to TRs

.zebra-stripe(@highlight: @lightest) {
    &:nth-child(odd) {
        background-color: @highlight;
    }
}

//
// Effects
//

.transform(@transform) {
    -webkit-transform: @transform;
    transform: @transform;
}

// For 3D Transforms

.backface-visibility(@visibility: visible) {
    -webkit-backface-visibility: @visibility;
    backface-visibility: @visibility;
}

.animation(@animation) {
    -webkit-animation: @animation;
    animation: @animation;
}
